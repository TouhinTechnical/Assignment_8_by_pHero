import React, { useEffect, useState } from 'react';
import Cart from '../Cart/Cart';
import Product from '../Product/Products';
import './BookStore.css';
const BookStore = () => {
    const [products, setProducts] = useState([]);
    const [cart, setCart] = useState([]);
    useEffect( () => {
        fetch('products.json')
        .then(res => res.json())
        .then(data => setProducts(data))
    }, []);
    const handlerAddToCart = (product) => {
        // console.log(product);
        setCart([...cart, product]);
    }
    return (
        <div className='BookStore-container'>
            <div className="products-container">
                {
                    products.map(product => <Product
                    key={product.id}
                    product = {product}
                    handlerAddToCart = {handlerAddToCart}
                    ></Product>)
                }
            </div>
            <div className="cart-container">
                <Cart cart={cart}></Cart>
            </div>
            <div className="questionPart">
                <h2>How React works?</h2>
                <p>প্রতিক্রিয়া একটি ঘোষণামূলক দৃষ্টান্ত ব্যবহার করে যা আপনার আবেদন সম্পর্কে যুক্তি করা সহজ করে তোলে এবং এর লক্ষ্য দক্ষ এবং নমনীয় উভয়ই হতে পারে। এটি আপনার অ্যাপ্লিকেশানের প্রতিটি রাজ্যের জন্য সাধারণ দৃষ্টিভঙ্গি ডিজাইন করে এবং আপনার ডেটা পরিবর্তিত হলে প্রতিক্রিয়া দক্ষতার সাথে সঠিকভাবে আপডেট এবং রেন্ডার করবে. একটি প্রতিক্রিয়া অ্যাপ্লিকেশন একাধিক উপাদান দিয়ে তৈরি, প্রতিটি HTML এর একটি ছোট, পুনঃব্যবহারযোগ্য অংশ রেন্ডার করার জন্য দায়ী। সাধারণ বিল্ডিং ব্লকগুলির মধ্যে জটিল অ্যাপ্লিকেশনগুলি তৈরি করার অনুমতি দেওয়ার জন্য উপাদানগুলি অন্যান্য উপাদানগুলির মধ্যে নেস্ট করা যেতে পারে। একটি উপাদান একটি অভ্যন্তরীণ অবস্থা বজায় রাখতে পারে</p>
                <h2>Different of props vs state?</h2>
                <p>
                    Props: এক উপাদান থেকে অন্য উপাদানে ডেটা প্রেরণ করতে ব্যবহৃত হয়.প্রপগুলি শুধুমাত্র পঠনযোগ্য উপাদান। এটি এমন একটি অবজেক্ট যা ট্যাগের অ্যাট্রিবিউটের মান সঞ্চয় করে এবং HTML অ্যাট্রিবিউটের মতো কাজ করে। এটি একটি উপাদান থেকে অন্য উপাদানে ডেটা পাস করার অনুমতি দেয়। এটি ফাংশন আর্গুমেন্টের অনুরূপ এবং একটি ফাংশনে পাস করা আর্গুমেন্টের মতো একইভাবে উপাদানে প্রেরণ করা যেতে পারে। প্রপগুলি অপরিবর্তনীয় তাই আমরা উপাদানের ভিতরে থেকে প্রপগুলি পরিবর্তন করতে পারি না। <br/>
                    State: একটি স্থানীয় ডেটা সঞ্চয়স্থান যা শুধুমাত্র উপাদানগুলির জন্য স্থানীয় এবং অন্যকে প্রেরণ করা যায় না. রাষ্ট্র একটি আপডেটযোগ্য কাঠামো যা উপাদান সম্পর্কে ডেটা বা তথ্য ধারণ করতে ব্যবহৃত হয় এবং সময়ের সাথে সাথে পরিবর্তন হতে পারে। অবস্থার পরিবর্তন ব্যবহারকারীর ক্রিয়া বা সিস্টেম ইভেন্টের প্রতিক্রিয়া হিসাবে ঘটতে পারে। এটি প্রতিক্রিয়া উপাদানের হৃদয় যা উপাদানটির আচরণ এবং এটি কীভাবে রেন্ডার করবে তা নির্ধারণ করে। একটি রাষ্ট্র যতটা সম্ভব সহজ রাখা আবশ্যক. এটি উপাদানটির স্থানীয় অবস্থা বা তথ্য উপস্থাপন করে। এটি শুধুমাত্র উপাদানের ভিতরে বা সরাসরি উপাদান দ্বারা অ্যাক্সেস বা পরিবর্তন করা যেতে পারে।
                </p>
            </div>
        </div>
    );
};

export default BookStore;